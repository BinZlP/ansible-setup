---
- name: Create prometheus user
  user:
    name: "{{ prometheus_user }}"
    system: yes
    createhome: no
    shell: /usr/sbin/nologin

- name: Create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    mode: '0755'
  loop:
    - "{{ prometheus_install_dir }}"
    - "{{ prometheus_install_dir }}/data"
    - "/etc/prometheus"

- name: Set Prometheus architecture fact
  set_fact:
    prometheus_arch: "{{ prometheus_arch_map[ansible_architecture] | default('amd64') }}"

- name: Download prometheus tarball
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.{{ prometheus_os }}-{{ prometheus_arch }}.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    mode: '0644'

- name: Extract prometheus
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.tar.gz"
    dest: "/tmp/"
    remote_src: yes

- name: Copy prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_os }}-{{ prometheus_arch }}/{{ item }}"
    dest: "{{ prometheus_install_dir }}/{{ item }}"
    owner: "{{ prometheus_user }}"
    mode: '0755'
    remote_src: yes
  loop:
    - prometheus
    - promtool

- name: Copy consoles and console_libraries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.{{ prometheus_os }}-{{ prometheus_arch }}/{{ item }}"
    dest: "{{ prometheus_install_dir }}/{{ item }}"
    owner: "{{ prometheus_user }}"
    mode: '0755'
    remote_src: yes
  loop:
    - consoles
    - console_libraries

- name: Place prometheus config
  copy:
    src: "files/prometheus.yml"
    dest: "{{ prometheus_config_file }}"
    owner: "{{ prometheus_user }}"
    mode: '0644'

- name: Place systemd unit for prometheus
  template:
    src: "prometheus.service.j2"
    dest: "/etc/systemd/system/{{ prometheus_service_name }}"
    mode: '0644'
  notify: restart prometheus

- name: Reload systemd
  command: systemctl daemon-reload
  changed_when: false

- name: Enable and start prometheus
  systemd:
    name: "{{ prometheus_service_name }}"
    state: started
    enabled: yes
